---
interface TimelineItem {
  date: string
  title: string
  description: string
  image?: string
}

interface Props {
  items: TimelineItem[]
}

const { items } = Astro.props
---

<div class='timeline-container'>
  <div class='timeline'>
    {
      items.map((item, index) => (
        <div class={`timeline-item ${index % 2 === 0 ? 'left' : 'right'}`} data-aos='bounce'>
          <div class='timeline-content'>
            <div class='date'>{item.date}</div>
            <h2>{item.title}</h2>
            <p>{item.description}</p>
          </div>
        </div>
      ))
    }
  </div>
</div>

<style>
  .timeline-container {
    width: 100%;
    padding: 20px 0;
  }

  .timeline {
    position: relative;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
  }

  .timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background: #ff69b4;
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
    border-radius: 10px;
  }

  .timeline-item {
    padding: 10px 40px;
    position: relative;
    width: 50%;
    box-sizing: border-box;
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.6s ease;
  }

  .timeline-item.animate {
    opacity: 1;
    transform: translateY(0);
    animation: bounce 0.8s ease;
  }

  @keyframes bounce {
    0% {
      transform: translateY(50px);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0);
    }
  }

  .timeline-content {
    padding: 20px;
  }

  .timeline-content h2 {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 10px;
    color: #333;
  }

  .timeline-content .date {
    font-size: 0.9rem;
    color: #ff69b4;
    margin-bottom: 5px;
  }

  .timeline-content p {
    line-height: 1.6;
    margin-bottom: 15px;
  }

  .timeline-content img {
    width: 100%;
    border-radius: 8px;
    margin-top: 10px;
  }

  .left {
    left: 0;
  }

  .right {
    left: 50%;
  }

  .timeline-item::before {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    background: #ff69b4;
    border-radius: 50%;
    top: 50%;
    transform: translateY(-50%);
    right: -12.5px;
  }

  .right::before {
    left: -12.5px;
  }

  @media screen and (max-width: 768px) {
    .timeline::after {
      left: 31px;
    }

    .timeline-item {
      width: 100%;
      padding-left: 70px;
      padding-right: 25px;
    }

    .right {
      left: 0;
    }

    .timeline-item::before {
      left: 18px;
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const observerOptions = {
      threshold: 0.2
    }

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate')
          observer.unobserve(entry.target)
        }
      })
    }, observerOptions)

    document.querySelectorAll('.timeline-item').forEach((item) => {
      observer.observe(item)
    })
  })
</script>
